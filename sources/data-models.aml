;====================================
; Class: point-data-model
; Used for define position properties
;====================================
(define-class point-data-model
  :inherit-from (point-object create-event)
  :properties (
               (coordinates :class 'editable-data-property-class
                   label "Coordinates"
                   )
               coord-ref	(nth 1 ^coordinates)
               label 		nil
               id 			nil
               line-width 	4
               color 		'green

               property-objects-list (list
                                      (list (the superior coordinates self)
                                            '(apply-formula? t))
                                      )
               )
  )

(define-method get-coordinates point-data-model ()
  !coordinates
  )
;=================================
; END point-data-model definitions
;=================================

;====================================
; Class: weight-point-data-model
; Used for define position properties
;====================================
(define-class weight-point-data-model
  :inherit-from (point-object create-event)
  :properties (
               (coordinates :class 'editable-data-property-class
                   label "Coordinates"
                   )
               coord-ref	(nth 1 ^coordinates)
               label 		nil
               id 			nil
               line-width 	4
               color 		'red

               property-objects-list (list
                                      (list (the superior coordinates self)
                                            '(apply-formula? t))
                                      )
               )
  )

(define-method get-coordinates weight-point-data-model ()
  !coordinates
  )
;=================================
; END weight-point-data-model definitions
;=================================

;=====================================
; Class: vector-data-model
; Used for defining a direction vector
;=====================================
(define-class vector-data-model
  :inherit-from (vector-class)
  :properties (
               point-ref (default ^point-default)
               (point-default :class 'point-data-model
                   coordinates '(0 0 0)
                   )
               (direction :class 'editable-data-property-class
                   label "Direction"
                   formula (default)
                   )
               length 0.2

               base-point (the coordinates (:from (the superior point-ref)))

               property-objects-list (list
                                      (list (the coordinates self (:from (the superior point-ref)) )
                                            '(apply-formula? t))
                                      (list (the superior direction self)
                                            '(apply-formula? t))
                                      )


               )
  )
;==================================
; END vector-data-model definitions
;==================================

;====================================================
; Class: frame-data-model
; Used for creating a frame, i.e. a coordinate system
;====================================================
(define-class frame-data-model
  :inherit-from (coordinate-system-class)
  :properties (
               ;;traverse to superior reference
               point-ref (default (the point-default (:from ^z-vector-ref)) )
               z-vector-ref (default ^z-vector-default)
               (z-vector-default :class 'vector-data-model
                   direction '(0 0 1)
                   )
               x-vector-ref (default ^x-vector-default)
               (x-vector-default :class 'vector-data-model
                   direction '(1 0 0)
                   )
               vector-k (the direction (:from ^z-vector-ref))
               vector-i (the direction (:from ^x-vector-ref))
               origin (the coordinates (:from ^point-ref))
               vector-j (cross-product ^vector-k ^vector-i)
               length 0.1

               property-objects-list (list
                                      "Coordinates:"
                                      (list  (the coordinates self (:from ^point-ref) )
                                             '(apply-formula? t))
                                      "Z Axis:"
                                      (list (the direction self (:from ^z-vector-ref) )
                                            '(apply-formula? t))
                                      "X Axis:"
                                      (list  (the direction self (:from ^x-vector-ref) )
                                             '(apply-formula? t))
                                      )
               )
  )

(define-method get-coordinates frame-data-model ()
  !origin
  )

;========================================
; Should only be called on a spline-frame
;========================================
(define-method get-direction-along-member frame-data-model ()
  !vector-i
  )
;=================================
; END frame-data-model definitions
;=================================

;====================================================================================
; Class: sub-point-data-model
; Used for placing a constraint's sub-frame. Explicit values are set on instantiation
;====================================================================================
(define-class sub-point-data-model
  :inherit-from (point-data-model)
  :properties (
               reference-object ^main-frame
               coordinates '(0 0 0)
               )
  )
;=====================================
; END sub-point-data-model definitions
;=====================================

;======================================================
; Class: sub-frame-data-model
; Explicit sub-frame class
; When a sub-point-ref is specified in a joint element,
; its sub-frame will be placed accordingly
;======================================================
(define-class sub-frame-data-model
  :inherit-from (frame-data-model)
  :properties (
               (point-ref :class 'point-data-model
                   coordinates (convert-coords ^sub-point-ref (the coordinates (:from ^sub-point-ref)))
                   )
               )
  )
;=====================================
; END sub-frame-data-model definitions
;=====================================
