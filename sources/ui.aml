;(progn (add-object (the interface forms) 'point-editor 'mechanism-user-io) (display (the interface forms point-editor)))

(define-class point-editor-widget
  :inherit-from(ui-form-class)
  :properties(
              label "Edit nodes"
              measurement 'pixels
              width 320
              height 350
              x-offset 40
              y-offset 40

                                        ;font nil
                                        ;background-color 'grey
                                        ;foreground-color 'grey

              loaded-coords-list (get-points-list (the main-mechanism-class points))
                                        ;loaded-coords-list loaded-coords
              coords-quantity (length ^loaded-coords-list)

              )
  :subobjects(
              (sheet :class '(ui-spreadsheet-class)
                  measurement 'percentage
                  x-offset 5
                  y-offset 5
                  width 90
                  height 80




                  column-labels (list "Name" "x-coord" "y-coord" "z-coord")
                  row-labels (loop for row from 0 to ^^coords-quantity
                               collect (format nil "Node ~a"
                                               (- row 1)
                                               )
                               )
                  cell-values ^^loaded-coords-list
                  number-of-columns (length ^column-labels)
                  number-of-rows ^^coords-quantity
                  row-height   25
                  column-width 60
                  attachment-info-list '(top bottom left right)
                  editable? t

                  )
              (toolbar :class ui-toolbar-class
                  measurement 'percentage
                  height 5
                  width 20
                  y-offset 90
                  x-offset 70
                  Availability-list nil
                  Button1-action-list '(

                                        (progn
                                          (print "Apply button pressed")
                                          (change-value
                                           ^^loaded-coords-list
                                           (loop for row from 0 to ^^coords-quantity
                                             collect (loop for cell from 0 to 3
                                                       do collect (get-cell-value (the superior sheet) row cell)
                                                       )
                                             )
                                           )
                                          (print ^^loaded-coords-list)
                                          (change-points-list (the main-mechanism-class points) (^^loaded-coords-list))
                                          (update (the superior sheet))
                                          (hide (the superior point-editor))
                                          )
                                        (progn (
                                                (print "Plus button pressed")
                                                (change-value
                                                 ^^loaded-coords-list
                                                 (loop for row from 0 to ^^coords-quantity
                                                   collect (loop for cell from 0 to 3
                                                             do collect (get-cell-value (the superior sheet) row cell)
                                                             )
                                                   )
                                                 )
                                                (print ^^loaded-coords-list)
                                                (change-points-list (the main-mechanism-class points) (^^loaded-coords-list))
                                                (change-value ^^coords-quantity (+ ^^coords-quantity 1))
                                                (update (the superior sheet))
                                                ))
                                        (progn
                                          (print "Minus button pressed")
                                          (change-value
                                           ^^loaded-coords-list
                                           (loop for row from 0 to ^^coords-quantity
                                             collect (loop for cell from 0 to 3
                                                       do collect (get-cell-value (the superior sheet) row cell)
                                                       )
                                             )
                                           )
                                          (print ^^loaded-coords-list)
                                          (change-points-list (the main-mechanism-class points) (^^loaded-coords-list))
                                          (change-value ^^coords-quantity (- ^^coords-quantity 1))
                                          (update (the superior sheet))
                                          )
                                        )
                  Button3-action-list nil
                  Images-list (list (concatenate (logical-path :ui-bitmaps) "apply.bmp") (concatenate (logical-path :ui-bitmaps) "add-object.bmp") (concatenate (logical-path :ui-bitmaps) "delete-object.bmp"))
                  Labels-list (list "Apply" "Add node" "Remove node")
                  Number-of-buttons (length ^Button1-action-list)
                  Orient (nth 0 '(:horizontal :vertical))
                  Tooltips-list nil
                  )
              )
  )

(define-method change-points-list point-collection (new-points-list)
  (progn
    (print new-points-list)
    (print !points-list)
    (change-value !points-list new-points-list)
    )
  )
